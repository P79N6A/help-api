<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.point.dao.PointLevelRewardDao">
    
	<sql id="pointLevelRewardColumns">
		a.id AS "id",
		a.level AS "level",
		a.need_point AS "needPoint",
		a.reward_point AS "rewardPoint",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate"
	</sql>
	
	<sql id="pointLevelRewardJoins">
	</sql>
    
	<select id="get" resultType="PointLevelReward">
		SELECT 
			<include refid="pointLevelRewardColumns"/>
		FROM point_level_reward a
		<include refid="pointLevelRewardJoins"/>
		WHERE a.id = #{id}
	</select>
	<!-- 通过等级获取数据 -->
	<select id="getByLevel" resultType="PointLevelReward">
		SELECT <include refid="pointLevelRewardColumns"/>
		FROM point_level_reward a
		<include refid="pointLevelRewardJoins"/>
		WHERE a.level = #{level}
	</select>
	<!-- 通过积分获取最大等级信息 -->
	<select id="getMaxLevelByPoint" resultType="PointLevelReward">
		SELECT <include refid="pointLevelRewardColumns"/>
		FROM point_level_reward a
		<include refid="pointLevelRewardJoins"/>
		WHERE a.need_point &lt;= #{needPoint} ORDER BY a.need_point DESC limit 1
	</select>

	<select id="findList" resultType="PointLevelReward">
		SELECT 
			<include refid="pointLevelRewardColumns"/>
		FROM point_level_reward a
		<include refid="pointLevelRewardJoins"/>
		<where>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PointLevelReward">
		SELECT 
			<include refid="pointLevelRewardColumns"/>
		FROM point_level_reward a
		<include refid="pointLevelRewardJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.level ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO point_level_reward(
			level,
			need_point,
			reward_point,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{level},
			#{needPoint},
			#{rewardPoint},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE point_level_reward 
		<set> 	
			<if test="level != null">
				level = #{level},
			</if>
			<if test="needPoint != null">
				need_point = #{needPoint},
			</if>
			<if test="rewardPoint != null">
				reward_point = #{rewardPoint},
			</if>
			<if test="createBy != null and createBy.id != null">
				create_by = #{createBy.id},
			</if>
			<if test="createDate != null and createDate != ''">
				create_date = #{createDate},
			</if>
			<if test="updateBy != null and updateBy.id != null">
				update_by = #{updateBy.id},
			</if>
			<if test="updateDate != null and updateDate != ''">
				update_date = #{updateDate},
			</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM point_level_reward
		WHERE id = #{id}
	</update>
	
</mapper>