<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.RoleDao">
    
    <resultMap id="roleResult" type="Role">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="enname" column="enname" />
		<result property="roleType" column="role_type" />
		<result property="dataScope" column="dataScope" />
		<result property="remarks" column="remarks" />
		<result property="useable" column="useable" />
		<result property="sysData" column="sysData" />
	</resultMap>
	
    <sql id="roleColumns">
    	a.id,
    	a.name,
    	a.enname,
    	a.role_type,
		a.data_scope AS dataScope,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
    	a.useable AS useable,
    	a.is_sys AS sysData
    </sql>
    
	<select id="get" resultMap="roleResult">
		SELECT
			<include refid="roleColumns"/>,<!-- 
			ur.user_id AS "userList.id",
			u.login_name AS "userList.loginName",
			u.name AS "userList.name",
			u.email AS "userList.email",
			u.phone AS "userList.phone",
			u.mobile AS "userList.mobile",
			uc.name AS "userList.company.name",
			uo.name AS "userList.office.name", -->
			rm.menu_id AS "menuList.id"
		FROM sys_role a
		<!-- 
		LEFT JOIN sys_user_role ur ON ur.role_id = a.id
		LEFT JOIN sys_user u ON u.id = ur.user_id
		LEFT JOIN sys_office uc ON uc.id = u.company_id
		LEFT JOIN sys_office uo ON uo.id = u.office_id -->
		LEFT JOIN sys_role_menu rm ON rm.role_id = a.id
		
		WHERE a.id = #{id}
	</select>
	
	<select id="getByName" resultType="Role">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.name = #{name} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<select id="getByEnname" resultType="Role">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.enname = #{enname} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	<!-- 检测角色名是否重复 -->
	<select id="checkRoleName" resultType="int">
		select count(1) from sys_role a 
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				and a.name = #{name}
			</if>
			<if test="enname != null and enname != ''">
				and a.enname = #{enname}
			</if>
			<if test="id != null">
				and id != #{id}
			</if>
		</where>
	</select>
	
	<select id="findList" resultMap="roleResult">
		SELECT <!-- DISTINCT -->
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.useable=#{useable}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		ORDER BY a.id
	</select>
	
	<select id="findAllList" resultType="Role">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="name != null and name != ''">
			AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		ORDER BY a.id
	</select>
	
	<insert id="insert">
		INSERT INTO sys_role(
			id, 
			name, 
			enname, 
			role_type,
			data_scope, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag,
			is_sys,
			useable
		) VALUES (
			#{id}, 
			#{name}, 
			#{enname}, 
			#{roleType},
			#{dataScope}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{sysData},
			#{useable}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_role 
		<set> 	
			<if test="id != null and id != ''">
				id = #{id},
			</if>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="enname != null and enname != ''">
				enname = #{enname},
			</if>
			<if test="roleType != null">
				role_type = #{roleType},
			</if>
			<if test="dataScope != null and dataScope != ''">
				data_scope = #{dataScope},
			</if>
			<if test="useable != null and useable != ''">
				useable = #{useable},
			</if>
			<if test="createBy != null and createBy.id != null">
				create_by = #{createBy.id},
			</if>
			<if test="createDate != null and createDate != ''">
				create_date = #{createDate},
			</if>
			<if test="updateBy != null and updateBy.id != null">
				update_by = #{updateBy.id},
			</if>
			<if test="updateDate != null and updateDate != ''">
				update_date = #{updateDate},
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks},
			</if>
			<if test="delFlag != null and delFlag != ''">
				del_flag = #{delFlag},
			</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<delete id="deleteRoleMenu">
		DELETE FROM sys_role_menu WHERE role_id = #{id}
	</delete>
	
	<insert id="insertRoleMenu">
		INSERT INTO sys_role_menu(role_id, menu_id)
		<foreach collection="menuList" item="menu" separator=" union all ">
			SELECT #{id}, #{menu.id}
			<if test="dbName != 'mssql'">
			FROM dual
			</if>
		</foreach>
	</insert>
	
	<delete id="deleteRoleOffice">
		DELETE FROM sys_role_office WHERE role_id = #{id}
	</delete>
	
	<insert id="insertRoleOffice">
		INSERT INTO sys_role_office(role_id, office_id)
		<foreach collection="officeList" item="office" separator=" union all ">
			SELECT #{id}, #{office.id}
			<if test="dbName != 'mssql'">
			FROM dual
			</if>
		</foreach>
	</insert>
	
	<update id="delete">
		UPDATE sys_role SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<delete id="delRoleMenu">
		DELETE FROM sys_role_menu WHERE role_id = #{roleId} and menu_id in (${delMenus})
	</delete>
	
	<insert id="addRoleMenu" parameterType="list">
		INSERT INTO sys_role_menu(role_id, menu_id) values 
		<foreach collection="list" item="item" separator=","  index="index">
			(#{item.roleId}, #{item.menuId})
		</foreach>
	</insert>
</mapper>